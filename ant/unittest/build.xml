<project name="unittest_template" default="build_release">
    <property file="../build.properties" />
    <fail message="ServiceDirectory_make_codecoverage property not set">
        <condition>
            <not>
                <isset property="ServiceDirectory_make_codecoverage"/>
            </not>
        </condition>
    </fail>
    <fail message="ServiceDirectory_make_debug property not set">
        <condition>
            <not>
                <isset property="ServiceDirectory_make_debug"/>
            </not>
        </condition>
    </fail>
    <fail message="ServiceDirectory_make_release property not set">
        <condition>
            <not>
                <isset property="ServiceDirectory_make_release"/>
            </not>
        </condition>
    </fail>
    <fail message="ServiceDirectory_vc08_codecoverage property not set">
        <condition>
            <not>
                <isset property="ServiceDirectory_vc08_codecoverage"/>
            </not>
        </condition>
    </fail>
    <fail message="ServiceDirectory_vc08_debug property not set">
        <condition>
            <not>
                <isset property="ServiceDirectory_vc08_debug"/>
            </not>
        </condition>
    </fail>
    <fail message="ServiceDirectory_vc08_release property not set">
        <condition>
            <not>
                <isset property="ServiceDirectory_vc08_release"/>
            </not>
        </condition>
    </fail>
    <condition property="is.windows">
        <os family="windows" />
    </condition>
    <condition property="is.mac">
        <os family="mac" />
    </condition>
    <condition property="is.unix">
        <os family="unix" />
    </condition>
    <target name="clean_make_codecoverage" unless="is.windows">
        <delete file="unittest.xml" />
        <delete dir="providerDir" />
    </target>
    <target name="clean_make_debug" unless="is.windows">
        <delete file="unittest.xml" />
        <delete dir="providerDir" />
    </target>
    <target name="clean_make_release" unless="is.windows">
        <delete file="unittest.xml" />
        <delete dir="providerDir" />
    </target>
    <target name="clean_vc08_codecoverage" if="is.windows">
        <!-- NO-OP -->
    </target>
    <target name="clean_vc08_debug" if="is.windows">
        <delete file="unittest.xml" />
        <delete dir="providerDir" />
    </target>
    <target name="clean_vc08_release" if="is.windows">
        <delete file="unittest.xml" />
        <delete dir="providerDir" />
    </target>
    <target name="build_make_codecoverage" unless="is.windows">
        <!-- NO-OP -->
    </target>
    <target name="build_make_debug" unless="is.windows">
        <!-- NO-OP -->
    </target>
    <target name="build_make_release" unless="is.windows">
        <!-- NO-OP -->
    </target>
    <target name="build_vc08_codecoverage" if="is.windows">
        <!-- NO-OP -->
    </target>
    <target name="build_vc08_debug" if="is.windows">
        <!-- NO-OP -->
    </target>
    <target name="build_vc08_release" if="is.windows">
        <!-- NO-OP -->
    </target>
    <target name="unittest_make_codecoverage" unless="is.windows">
        <exec executable="lcov" dir="../build_codecoverage">
            <arg line="--directory CMakeFiles/${ServiceName}.dir --zerocounters" />
        </exec>
        <exec executable="ruby" failonerror="true">
            <env key="BP_OUTPUT_DIR" value="build_codecoverage/${ServiceDirectory_make_codecoverage}" />
            <arg line="./unittest.rb --runner cppunit_runner" />
        </exec>
        <delete dir="../build_codecoverage/lcov_results" />
        <mkdir dir="../build_codecoverage/lcov_results" />
        <exec executable="lcov" dir="../build_codecoverage/lcov_results">
            <arg line="--capture --directory ../CMakeFiles/${ServiceName}.dir --output-file lcov.info.tmp --gcov-tool /usr/bin/gcov-4.0" />
        </exec>
        <exec executable="lcov" dir="../build_codecoverage/lcov_results">
            <arg line="--remove lcov.info.tmp ${CoverageStrip_make} --output-file lcov.info" />
        </exec>
        <delete dir="../build_codecoverage/lcov_results/lcov-report" />
        <exec executable="genhtml" dir="../build_codecoverage/lcov_results">
            <arg line="--output-directory lcov-report lcov.info" />
        </exec>
    </target>
    <target name="unittest_make_debug" unless="is.windows">
        <exec executable="ruby" failonerror="true">
            <env key="BP_OUTPUT_DIR" value="build_debug/${ServiceDirectory_make_debug}" />
            <arg line="./unittest.rb --runner cppunit_runner" />
        </exec>
    </target>
    <target name="unittest_make_release" unless="is.windows">
        <exec executable="ruby" failonerror="true">
            <env key="BP_OUTPUT_DIR" value="build_release/${ServiceDirectory_make_release}" />
            <arg line="./unittest.rb --runner cppunit_runner" />
        </exec>
    </target>
    <target name="unittest_vc08_codecoverage" if="is.windows">
        <!-- NO-OP -->
    </target>
    <target name="unittest_vc08_debug" if="is.windows">
        <delete file="x1.bat" />
        <echo file="x1.bat">@echo off
set BP_OUTPUT_DIR=build/${ServiceDirectory_vc08_debug}
ruby .\unittest.rb --runner cppunit_runner
        </echo>
        <exec executable="cmd" failonerror="true">
            <arg line="/C x1.bat" />
        </exec>
        <delete file="x1.bat" />
    </target>
    <target name="unittest_vc08_release" if="is.windows">
        <delete file="x1.bat" />
        <echo file="x1.bat">@echo off
set BP_OUTPUT_DIR=build/${ServiceDirectory_vc08_release}
ruby .\unittest.rb --runner cppunit_runner
        </echo>
        <exec executable="cmd" failonerror="true">
            <arg line="/C x1.bat" />
        </exec>
        <delete file="x1.bat" />
    </target>
    <target name="clean_codecoverage" depends="clean_make_codecoverage,clean_vc08_codecoverage" />
    <target name="clean_debug" depends="clean_make_debug,clean_vc08_debug" />
    <target name="clean_release" depends="clean_make_release,clean_vc08_release" />
    <target name="build_codecoverage" depends="build_make_codecoverage,build_vc08_codecoverage" />
    <target name="build_debug" depends="build_make_debug,build_vc08_debug" />
    <target name="build_release" depends="build_make_release,build_vc08_release" />
    <target name="unittest_codecoverage" depends="unittest_make_codecoverage,unittest_vc08_codecoverage" />
    <target name="unittest_debug" depends="unittest_make_debug,unittest_vc08_debug" />
    <target name="unittest_release" depends="unittest_make_release,unittest_vc08_release" />
</project>
